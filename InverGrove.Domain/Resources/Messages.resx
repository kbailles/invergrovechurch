<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationNameTooLong" xml:space="preserve">
    <value>The application name is too long.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="CanNotBeMoreThanMinRequiredPasswordLength" xml:space="preserve">
    <value>MinRequiredNonalphanumericCharacters can not be more than MinRequiredPasswordLength</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="CannotRetrieveHashedPassword" xml:space="preserve">
    <value>Provider cannot retrieve a hashed password</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="ChangePasswordDoesNotContainNumber" xml:space="preserve">
    <value>New password must contain a minimum of {0} numeric characters.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="ChangePasswordDoesNotContainSymbol" xml:space="preserve">
    <value>New password must contain a minimum of {0} non alphanumeric characters.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="ChangePasswordDoesNotMeetRequirements" xml:space="preserve">
    <value>New password does not meet requirements. Must be a minimum of {0} characters</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="ChangePasswordNotCorrect" xml:space="preserve">
    <value>{0} does not meet the requirements for a password. Ensure there are no spaces, and only contains letters numbers or one of the following characters: ! @ # $ % ^</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="ChangePasswordSameWord" xml:space="preserve">
    <value>Old password and new password cannot be the same.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="InvalidApplicationName" xml:space="preserve">
    <value>Invalid application name.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="MembershipCustomPasswordValidationFailure" xml:space="preserve">
    <value>The custom password validation failed.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="MembershipMinRequiredNonAlphanumericCharactersIncorrect" xml:space="preserve">
    <value>Miniumum alphanumeric character value of {0} is invalid.  Minumum number of alphanumeric characters must be between 0 and {1}.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="MembershipPasswordLengthIncorrect" xml:space="preserve">
    <value>Password length of {0} is invalid.  Password length must be between 1 and 128.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="MembershipPasswordRetrievalNotSupported" xml:space="preserve">
    <value>This Membership Provider has not been configured to support password retrieval.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="NotConfiguredToSupportPasswordResets" xml:space="preserve">
    <value>This provider is not configured to allow password resets. To enable password reset, set enablePasswordReset to \"true\" in the configuration file.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="ParameterTooLong" xml:space="preserve">
    <value>The parameter '{0}' is too long: it must not exceed {1} chars in length.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="ParameterTooShort" xml:space="preserve">
    <value>The length of parameter '{0}' needs to be greater or equal to '{1}'.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="PasswordRegexStrength" xml:space="preserve">
    <value>Password strength regular expression: {0}
</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="PropertyNotFound" xml:space="preserve">
    <value>Could not find a property called '{0}' on type {1}</value>
    <comment>EnumerableExtensions</comment>
  </data>
  <data name="SecurityAnswerIncorrect" xml:space="preserve">
    <value>Security answer is incorrect. Please re-enter.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="SecurityAnswerInvalidText" xml:space="preserve">
    <value>The security answer {0} is invalid.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="SecurityAnswerMaximumLength" xml:space="preserve">
    <value>The security answer value cannot exceed 64 characters.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="SecurityAnswerMissing" xml:space="preserve">
    <value>Security Answer missing.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="SecurityAnswerRequired" xml:space="preserve">
    <value>You must specify a security answer.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="SecurityQuestionMaximumLength" xml:space="preserve">
    <value>The security question value cannot exceed 64 characters.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="SecurityQuestionMissing" xml:space="preserve">
    <value>We are unable to reset your password online.  Please contact Patterson Medical on 08448 730 035.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="SecurityQuestionRequired" xml:space="preserve">
    <value>You must specify a security question.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="PasswordErrorMessage" xml:space="preserve">
    <value>The {0} must be at least {2} characters long.</value>
  </data>
  <data name="ConfirmPasswordErrorMessage" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="IncorrectPasswordErrorMessage" xml:space="preserve">
    <value>The user name or password provided is incorrect.</value>
  </data>
  <data name="CannotRetrieveHashedPassword1" xml:space="preserve">
    <value>Provider cannot retrieve a hashed password</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="MembershipCustomPasswordValidationFailure1" xml:space="preserve">
    <value>The custom password validation failed.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="MembershipMinRequiredNonAlphanumericCharactersIncorrect1" xml:space="preserve">
    <value>Miniumum alphanumeric character value of {0} is invalid.  Minumum number of alphanumeric characters must be between 0 and {1}.</value>
    <comment>MembershipProvider</comment>
  </data>
  <data name="ParameterNullExceptionMessageObjectIs" xml:space="preserve">
    <value>
 This method is a member of {0}.</value>
  </data>
  <data name="ParameterNullExceptionMessageOnMethod" xml:space="preserve">
    <value>The parameter {0} on method {1}.</value>
  </data>
  <data name="ParameterNullExceptionMethodExpectedNonNull" xml:space="preserve">
    <value>The method expected a non-null, or non-default-value of the type {0}.</value>
  </data>
  <data name="ParameterNullExceptionNoName" xml:space="preserve">
    <value> No parameter name passed, however the following parameters were available at the time the exception was thrown:
</value>
  </data>
  <data name="ParameterNullExceptionUnableToDetermine" xml:space="preserve">
    <value> Unable to determine the failing parameter type, perhaps the name passed was incorrect? </value>
  </data>
  <data name="ParameterNullExceptionUnableToDetermineDeclaringType" xml:space="preserve">
    <value> Unable to determine the method's declaring type.</value>
  </data>
  <data name="FirstLastNameLengthError" xml:space="preserve">
    <value>Maximum characters is 50.</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>First name is required.</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>Last name is required.</value>
  </data>
  <data name="AddressOneRequired" xml:space="preserve">
    <value>Address is required.</value>
  </data>
  <data name="AddressLengthErrorMessage" xml:space="preserve">
    <value>Address length is invalid. Must be between 1 and 200 characters.</value>
  </data>
  <data name="AreaCodeInvalidErrorMessage" xml:space="preserve">
    <value>Area Code is invalid.</value>
  </data>
  <data name="CityLengthErrorMessage" xml:space="preserve">
    <value>City length is invalid.  Must be between 1 and 100 characters.</value>
  </data>
  <data name="CityRequired" xml:space="preserve">
    <value>City is required.</value>
  </data>
  <data name="EmailRequiredErrorMessage" xml:space="preserve">
    <value>Email is required.</value>
  </data>
  <data name="PhoneNumberFormatErrorMessage" xml:space="preserve">
    <value>Phone Number format is invalid.</value>
  </data>
  <data name="PhoneNumberRequiredErrorMessage" xml:space="preserve">
    <value>Phone Number required.</value>
  </data>
  <data name="PostalCodeInvalidErrorMessage" xml:space="preserve">
    <value>Postal Code format is invalid.</value>
  </data>
  <data name="PostalCodeLengthErrorMessage" xml:space="preserve">
    <value>Postal Code is length is invalid. Must be between 5 and 10 characters.</value>
  </data>
  <data name="PostalCodeRequired" xml:space="preserve">
    <value>Postal Code is required.</value>
  </data>
  <data name="StateRequired" xml:space="preserve">
    <value>State is required.</value>
  </data>
  <data name="AreaCodeRequired" xml:space="preserve">
    <value>Area Code is required.</value>
  </data>
  <data name="PhoneNumberTypeRequired" xml:space="preserve">
    <value>Please select a phone number type.</value>
  </data>
  <data name="GenderRequiredErrorMessage" xml:space="preserve">
    <value>Gender is required.</value>
  </data>
  <data name="MaritalStatusRequiredErrorMessage" xml:space="preserve">
    <value>Please select a Marital Status.</value>
  </data>
  <data name="PersonTypeRequiredErrorMessage" xml:space="preserve">
    <value>Please select a Person Type.</value>
  </data>
  <data name="CreateMemberProviderError" xml:space="preserve">
    <value>The authentication provider returned an error. Please verify your entry and try again. If the problem persists, please contact your system administrator.</value>
  </data>
  <data name="CreateMemberUnknownErorr" xml:space="preserve">
    <value>An unknown error occurred. Please verify your entry and try again. If the problem persists, please contact your system administrator.</value>
  </data>
  <data name="CreateMemberUserRejected" xml:space="preserve">
    <value>The user creation request has been canceled. Please verify your entry and try again. If the problem persists, please contact your system administrator.</value>
  </data>
  <data name="DuplicateUserEmail" xml:space="preserve">
    <value>A user name for that e-mail address already exists. Please enter a different e-mail address.</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>The e-mail address provided is invalid. Please check the value and try again.</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>The password provided is invalid. Please enter a valid password value.</value>
  </data>
  <data name="InvalidPasswordAnswer" xml:space="preserve">
    <value>The password retrieval answer provided is invalid. Please check the value and try again.</value>
  </data>
  <data name="InvalidPasswordQuestion" xml:space="preserve">
    <value>The password retrieval question provided is invalid. Please check the value and try again.</value>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>The user name provided is invalid. Please check the value and try again.</value>
  </data>
  <data name="UsernameAlreadyExists" xml:space="preserve">
    <value>User name already exists. Please enter a different user name.</value>
  </data>
  <data name="DefaultLogCreated" xml:space="preserve">
    <value>The LogService defaultLog has been created and enabled.</value>
  </data>
  <data name="AddRangeFailed" xml:space="preserve">
    <value>AddRange called on LogServiceEventArgs with an empty enumerable. This exception was added simply as a notice that the attempt to log multiple exceptions has failed, catastrophically.</value>
  </data>
  <data name="ErrorMessageEmpty" xml:space="preserve">
    <value>LogService - Error log request made, but message contained no data.</value>
    <comment>LogService</comment>
  </data>
  <data name="FatalLogMessageEmpty" xml:space="preserve">
    <value>LogService - Fatal log request made, but message contained no data.</value>
    <comment>LogService</comment>
  </data>
  <data name="HttpMessageEventArgsUrlNotSet" xml:space="preserve">
    <value>Url not set</value>
  </data>
  <data name="LogExceptionNull" xml:space="preserve">
    <value>LogService - Request sent to {0}(Exception ex), however the Exception object was null.</value>
    <comment>LogService</comment>
  </data>
  <data name="NullExceptionObject" xml:space="preserve">
    <value>Null exception object sent to DebugLog.</value>
    <comment>LogService</comment>
  </data>
  <data name="WarnLogMessageEmpty" xml:space="preserve">
    <value>LogService - Warning log request made, but message contained no data.</value>
    <comment>LogService</comment>
  </data>
  <data name="SendMailError" xml:space="preserve">
    <value>Error occurred when attepting to send email message.</value>
  </data>
  <data name="IsUserRequired" xml:space="preserve">
    <value>Please select whether or not to create a user account.</value>
  </data>
  <data name="DuplicateUserName" xml:space="preserve">
    <value>That username has been claimed already. Please enter a different username.</value>
  </data>
</root>